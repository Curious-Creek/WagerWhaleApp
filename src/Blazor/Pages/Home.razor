@page "/"
@using MediatR
@using Blazor.Components
@using Blazor.ViewModels.ErrorViewModel
@using MapsterMapper
@using Application.Identity.Commands.RegisterUser
@using Application.Identity.Commands.LoginUser

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<input type="text" @bind="Email"/>
<input type="text" @bind="Password"/>

<button type="button" class="btn btn-primary" @onclick="Register">Register user</button>
<button type="button" class="btn btn-primary" @onclick="Login">Login user</button>

@if (ValidationError != null)
{
    <AlertingComponent DomainErrorViewModel="ValidationError" AlertColorInstance="@AlertColor.Warning"></AlertingComponent>
}

Welcome to your new app.

@code
{
    [Inject] public ISender sender { get; set; }

    [Inject] public IMapper mapper { get; set; }

    public string Email { get; set; }
    public string Password { get; set; }

    public DomainErrorViewModel? ValidationError { get; set; }

    private async Task Register()
    {
        ValidationError = null;
        var registerUserOneOf = await sender.Send(new RegisterUserCommand(Email, Password));

        registerUserOneOf.Switch(
            success => Console.WriteLine("User registered"),
            error => ValidationError = mapper.Map<DomainErrorViewModel>(error)
        );
    }

    private async Task Login()
    {
        ValidationError = null;
        var loginOneOf = await sender.Send(new LoginUserCommand(Email, Password));
        
        loginOneOf.Switch(
            success => Console.WriteLine("User logged in"),
            error => ValidationError = mapper.Map<DomainErrorViewModel>(error));
    }
}

